//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.2
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace Effekseer.swig {

public class NetworkClient : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal NetworkClient(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(NetworkClient obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~NetworkClient() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          EffekseerNativePINVOKE.delete_NetworkClient(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public NetworkClient() : this(EffekseerNativePINVOKE.new_NetworkClient(), true) {
  }

  public bool StartNetwork(string host, ushort port) {
    bool ret = EffekseerNativePINVOKE.NetworkClient_StartNetwork(swigCPtr, host, port);
    return ret;
  }

  public void StopNetwork() {
    EffekseerNativePINVOKE.NetworkClient_StopNetwork(swigCPtr);
  }

  public void UpdateNetwork() {
    EffekseerNativePINVOKE.NetworkClient_UpdateNetwork(swigCPtr);
  }

  public bool IsConnectingNetwork() {
    bool ret = EffekseerNativePINVOKE.NetworkClient_IsConnectingNetwork(swigCPtr);
    return ret;
  }

  public void SendDataByNetwork(string key, System.IntPtr data, int size, string path) {
    EffekseerNativePINVOKE.NetworkClient_SendDataByNetwork(swigCPtr, key, data, size, path);
  }

  public void StartProfiling() {
    EffekseerNativePINVOKE.NetworkClient_StartProfiling(swigCPtr);
  }

  public void StopProfiling() {
    EffekseerNativePINVOKE.NetworkClient_StopProfiling(swigCPtr);
  }

  public ProfileSample ReadProfileSample() {
    ProfileSample ret = new ProfileSample(EffekseerNativePINVOKE.NetworkClient_ReadProfileSample(swigCPtr), true);
    return ret;
  }

}

}
